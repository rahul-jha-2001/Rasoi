# Generated by Django 5.1.1 on 2025-03-30 10:11

import Order.models
import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('store_uuid', models.UUIDField(db_index=True)),
                ('order_no', models.CharField(default=Order.models.generate_order_no, editable=False, max_length=16, unique=True)),
                ('cart_uuid', models.UUIDField(blank=True, null=True, verbose_name='Cart UUID')),
                ('order_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('user_phone_no', models.CharField(max_length=12, verbose_name='Phone Number')),
                ('order_type', models.CharField(choices=[('ORDER_TYPE_UNSPECIFIED', 'Unspecified'), ('ORDER_TYPE_DINE_IN', 'DineIn'), ('ORDER_TYPE_TAKE_AWAY', 'TakeAway'), ('ORDER_TYPE_DRIVE_THRU', 'DriveThru')], default='ORDER_TYPE_DINE_IN', max_length=30, verbose_name='Order Type')),
                ('table_no', models.CharField(blank=True, max_length=4, null=True, verbose_name='Table No')),
                ('vehicle_no', models.CharField(blank=True, max_length=10, null=True, verbose_name='Vehicle No')),
                ('vehicle_description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Vehicle Description')),
                ('coupon_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Coupon Code')),
                ('special_instructions', models.TextField(blank=True, null=True, verbose_name='Special Instructions')),
                ('order_status', models.CharField(choices=[('ORDER_STATE_UNSPECIFIED', 'Unspecified_State'), ('ORDER_STATE_PAYMENT_PENDING', 'Payment Pending'), ('ORDER_STATE_PLACED', 'Placed'), ('ORDER_STATE_PREPARING', 'Preparing'), ('ORDER_STATE_READY', 'Ready'), ('ORDER_STATE_COMPLETED', 'Completed'), ('ORDER_STATE_CANCELED', 'Canceled')], default='ORDER_STATE_PAYMENT_PENDING', max_length=30, verbose_name='Order Status')),
                ('subtotal_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Subtotal Amount')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Discount Amount')),
                ('price_before_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Price Before Tax')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Tax Amount')),
                ('packaging_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Packaging Cost')),
                ('final_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Final Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'indexes': [models.Index(fields=['store_uuid', 'user_phone_no', 'order_uuid'], name='Order_order_store_u_1697b0_idx'), models.Index(fields=['order_status'], name='Order_order_order_s_efbec2_idx'), models.Index(fields=['created_at'], name='Order_order_created_faca63_idx')],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('item_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_name', models.TextField(verbose_name='Product Name')),
                ('product_uuid', models.UUIDField(db_index=True, verbose_name='Product UUID')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Unit Price')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('discount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Discount Percentage')),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, verbose_name='Tax')),
                ('packaging_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Packaging Cost')),
                ('subtotal_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Subtotal Amount')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Discount Amount')),
                ('price_before_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Price Before Tax')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Tax Amount')),
                ('final_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Final Price')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='Order.order')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
            },
        ),
        migrations.CreateModel(
            name='OrderItemAddOn',
            fields=[
                ('order_item_addOn_uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='Order Item AddOn ID')),
                ('add_on_uuid', models.UUIDField(blank=True, null=True, verbose_name='AddOn ID')),
                ('add_on_name', models.TextField(verbose_name='AddOn Name')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='AddOn Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='AddOn Price')),
                ('is_free', models.BooleanField(default=False, verbose_name='Is Free')),
                ('subtotal_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Subtotal')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_ons', to='Order.orderitem')),
            ],
            options={
                'verbose_name': 'Order Item Add On',
                'verbose_name_plural': 'Order Item Add Ons',
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('payment_uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('rz_payment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('rz_order_id', models.CharField(blank=True, max_length=50, null=True)),
                ('rz_signature', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('method', models.CharField(choices=[('PAYMENT_METHOD_UNSPECIFIED', 'Unspecified'), ('PAYMENT_METHOD_RAZORPAY', 'Razorpay'), ('PAYMENT_METHOD_CASH', 'Cash'), ('PAYMENT_METHOD_CARD', 'Card'), ('PAYMENT_METHOD_UPI', 'UPI'), ('PAYMENT_METHOD_NETBANKING', 'Netbanking')], default='PAYMENT_METHOD_CASH', max_length=30, verbose_name='Payment Method')),
                ('status', models.CharField(choices=[('PAYMENT_STATE_UNSPECIFIED', 'Unspecified'), ('PAYMENT_STATE_PENDING', 'Pending'), ('PAYMENT_STATE_COMPLETE', 'Complete'), ('PAYMENT_STATE_FAILED', 'Failed'), ('PAYMENT_STATE_REFUNDED', 'Refunded')], default='PAYMENT_STATE_PENDING', max_length=30, verbose_name='Payment Status')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='Order.order')),
            ],
            options={
                'verbose_name': 'Order Payment',
                'verbose_name_plural': 'Order Payments',
            },
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order'], name='Order_order_order_i_5bee79_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['product_uuid'], name='Order_order_product_e027d1_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitemaddon',
            index=models.Index(fields=['order_item'], name='Order_order_order_i_1d7c29_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitemaddon',
            index=models.Index(fields=['order_item_addOn_uuid'], name='Order_order_order_i_cb1422_idx'),
        ),
        migrations.AddIndex(
            model_name='orderpayment',
            index=models.Index(fields=['order'], name='Order_order_order_i_b9a354_idx'),
        ),
        migrations.AddIndex(
            model_name='orderpayment',
            index=models.Index(fields=['status'], name='Order_order_status_5dbfa5_idx'),
        ),
        migrations.AddIndex(
            model_name='orderpayment',
            index=models.Index(fields=['time'], name='Order_order_time_ea8c94_idx'),
        ),
    ]
