# Generated by Django 5.2 on 2025-06-07 13:13

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('category_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('store_uuid', models.UUIDField(blank=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order in which category appears in menu')),
                ('is_available', models.BooleanField(default=True, help_text='Whether this category is currently available')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['display_order', 'name'],
                'indexes': [models.Index(fields=['store_uuid'], name='product_app_store_u_18d9bb_idx'), models.Index(fields=['category_uuid'], name='product_app_categor_22b65c_idx')],
                'constraints': [models.UniqueConstraint(fields=('store_uuid', 'display_order'), name='unique_display_order_per_store')],
            },
        ),
        migrations.CreateModel(
            name='DietaryPreference',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('store_uuid', models.UUIDField(blank=True)),
                ('diet_pref_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('icon_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Dietary Preference',
                'verbose_name_plural': 'Dietary Preferences',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['diet_pref_uuid'], name='product_app_diet_pr_0fcb02_idx'), models.Index(fields=['store_uuid'], name='product_app_store_u_80b410_idx'), models.Index(fields=['name'], name='product_app_name_86d40f_idx')],
                'constraints': [models.UniqueConstraint(fields=('store_uuid', 'name'), name='unique_store_uuid_name')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('product_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('store_uuid', models.UUIDField(blank=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('PRODUCT_STATE_DRAFT', 'PRODUCT_STATE_DRAFT'), ('PRODUCT_STATE_ACTIVE', 'PRODUCT_STATE_ACTIVE'), ('PRODUCT_STATE_INACTIVE', 'PRODUCT_STATE_INACTIVE'), ('PRODUCT_STATE_OUT_OF_STOCK', 'PRODUCT_STATE_OUT_OF_STOCK')], default='PRODUCT_STATE_DRAFT', max_length=30)),
                ('is_available', models.BooleanField(default=True)),
                ('display_price', models.DecimalField(decimal_places=3, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=3, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('GST_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('packaging_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('image_url', models.URLField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product_app.category', verbose_name='Category')),
                ('dietary_prefs', models.ManyToManyField(related_name='products', to='product_app.dietarypreference')),
            ],
            options={
                'verbose_name': ('Product',),
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Add_on',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('add_on_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100, verbose_name='Customization Name')),
                ('is_available', models.BooleanField(default=True, verbose_name='Available')),
                ('max_selectable', models.IntegerField(default=1, verbose_name='Max Selectable')),
                ('GST_percentage', models.DecimalField(decimal_places=3, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=3, default=0.0, max_digits=6, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Additional Price')),
                ('is_free', models.BooleanField(default=False, verbose_name='Is Free')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add_on', to='product_app.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Add-On',
                'verbose_name_plural': 'Add-Ons',
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['product_uuid'], name='product_app_product_38d9fd_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store_uuid'], name='product_app_store_u_38dcdf_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='product_app_categor_ab83db_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name', 'description'], name='product_app_name_da897e_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['status', 'is_available'], name='product_app_status_f7477a_idx'),
        ),
        migrations.AddIndex(
            model_name='add_on',
            index=models.Index(fields=['add_on_uuid'], name='product_app_add_on__ca89a5_idx'),
        ),
        migrations.AddIndex(
            model_name='add_on',
            index=models.Index(fields=['product'], name='product_app_product_92e82c_idx'),
        ),
    ]
