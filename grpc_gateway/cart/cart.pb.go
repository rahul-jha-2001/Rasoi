// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.2
// source: cart.proto

package cart

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ORDERTYPE int32

const (
	ORDERTYPE_ORDER_TYPE_UNSPECIFIED ORDERTYPE = 0
	ORDERTYPE_ORDER_TYPE_DINE_IN     ORDERTYPE = 1
	ORDERTYPE_ORDER_TYPE_TAKE_AWAY   ORDERTYPE = 2
	ORDERTYPE_ORDER_TYPE_DRIVE_THRU  ORDERTYPE = 3
)

// Enum value maps for ORDERTYPE.
var (
	ORDERTYPE_name = map[int32]string{
		0: "ORDER_TYPE_UNSPECIFIED",
		1: "ORDER_TYPE_DINE_IN",
		2: "ORDER_TYPE_TAKE_AWAY",
		3: "ORDER_TYPE_DRIVE_THRU",
	}
	ORDERTYPE_value = map[string]int32{
		"ORDER_TYPE_UNSPECIFIED": 0,
		"ORDER_TYPE_DINE_IN":     1,
		"ORDER_TYPE_TAKE_AWAY":   2,
		"ORDER_TYPE_DRIVE_THRU":  3,
	}
)

func (x ORDERTYPE) Enum() *ORDERTYPE {
	p := new(ORDERTYPE)
	*p = x
	return p
}

func (x ORDERTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDERTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_cart_proto_enumTypes[0].Descriptor()
}

func (ORDERTYPE) Type() protoreflect.EnumType {
	return &file_cart_proto_enumTypes[0]
}

func (x ORDERTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDERTYPE.Descriptor instead.
func (ORDERTYPE) EnumDescriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{0}
}

type CARTSTATE int32

const (
	CARTSTATE_CART_STATE_UNSPECIFIED_STATE CARTSTATE = 0
	CARTSTATE_CART_STATE_ACTIVE            CARTSTATE = 1
	CARTSTATE_CART_STATE_LOCKED            CARTSTATE = 2
	CARTSTATE_CART_STATE_ABANDONED         CARTSTATE = 3
)

// Enum value maps for CARTSTATE.
var (
	CARTSTATE_name = map[int32]string{
		0: "CART_STATE_UNSPECIFIED_STATE",
		1: "CART_STATE_ACTIVE",
		2: "CART_STATE_LOCKED",
		3: "CART_STATE_ABANDONED",
	}
	CARTSTATE_value = map[string]int32{
		"CART_STATE_UNSPECIFIED_STATE": 0,
		"CART_STATE_ACTIVE":            1,
		"CART_STATE_LOCKED":            2,
		"CART_STATE_ABANDONED":         3,
	}
)

func (x CARTSTATE) Enum() *CARTSTATE {
	p := new(CARTSTATE)
	*p = x
	return p
}

func (x CARTSTATE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CARTSTATE) Descriptor() protoreflect.EnumDescriptor {
	return file_cart_proto_enumTypes[1].Descriptor()
}

func (CARTSTATE) Type() protoreflect.EnumType {
	return &file_cart_proto_enumTypes[1]
}

func (x CARTSTATE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CARTSTATE.Descriptor instead.
func (CARTSTATE) EnumDescriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{1}
}

type DISCOUNTTYPE int32

const (
	DISCOUNTTYPE_UNSPCIFIED_DISCOUNT DISCOUNTTYPE = 0
	DISCOUNTTYPE_PERCENTAGE_DISCOUNT DISCOUNTTYPE = 1
	DISCOUNTTYPE_FIXED_DISCOUNT      DISCOUNTTYPE = 2
)

// Enum value maps for DISCOUNTTYPE.
var (
	DISCOUNTTYPE_name = map[int32]string{
		0: "UNSPCIFIED_DISCOUNT",
		1: "PERCENTAGE_DISCOUNT",
		2: "FIXED_DISCOUNT",
	}
	DISCOUNTTYPE_value = map[string]int32{
		"UNSPCIFIED_DISCOUNT": 0,
		"PERCENTAGE_DISCOUNT": 1,
		"FIXED_DISCOUNT":      2,
	}
)

func (x DISCOUNTTYPE) Enum() *DISCOUNTTYPE {
	p := new(DISCOUNTTYPE)
	*p = x
	return p
}

func (x DISCOUNTTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DISCOUNTTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_cart_proto_enumTypes[2].Descriptor()
}

func (DISCOUNTTYPE) Type() protoreflect.EnumType {
	return &file_cart_proto_enumTypes[2]
}

func (x DISCOUNTTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DISCOUNTTYPE.Descriptor instead.
func (DISCOUNTTYPE) EnumDescriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{2}
}

type Cart struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StoreUuid            string                 `protobuf:"bytes,1,opt,name=store_uuid,json=storeUuid,proto3" json:"store_uuid,omitempty"`
	CartUuid             string                 `protobuf:"bytes,2,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	UserPhoneNo          string                 `protobuf:"bytes,3,opt,name=user_phone_no,json=userPhoneNo,proto3" json:"user_phone_no,omitempty"`
	OrderType            ORDERTYPE              `protobuf:"varint,4,opt,name=order_type,json=orderType,proto3,enum=Cart_v1.ORDERTYPE" json:"order_type,omitempty"`
	TableNo              string                 `protobuf:"bytes,5,opt,name=table_no,json=tableNo,proto3" json:"table_no,omitempty"`
	VehicleNo            string                 `protobuf:"bytes,6,opt,name=vehicle_no,json=vehicleNo,proto3" json:"vehicle_no,omitempty"`
	VehicleDescription   string                 `protobuf:"bytes,7,opt,name=vehicle_description,json=vehicleDescription,proto3" json:"vehicle_description,omitempty"`
	CouponCode           string                 `protobuf:"bytes,8,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`
	SpeacialInstructions string                 `protobuf:"bytes,9,opt,name=speacial_instructions,json=speacialInstructions,proto3" json:"speacial_instructions,omitempty"`
	Items                []*CartItem            `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
	TotalSubtotal        float32                `protobuf:"fixed32,11,opt,name=total_subtotal,json=totalSubtotal,proto3" json:"total_subtotal,omitempty"` //Sum of all the total amounts of a
	TotalDiscount        float32                `protobuf:"fixed32,12,opt,name=total_discount,json=totalDiscount,proto3" json:"total_discount,omitempty"`
	TotalPriceBeforeTax  float32                `protobuf:"fixed32,13,opt,name=total_price_before_tax,json=totalPriceBeforeTax,proto3" json:"total_price_before_tax,omitempty"`
	TotalTax             float32                `protobuf:"fixed32,14,opt,name=total_tax,json=totalTax,proto3" json:"total_tax,omitempty"`
	PackagingCost        float32                `protobuf:"fixed32,15,opt,name=packaging_cost,json=packagingCost,proto3" json:"packaging_cost,omitempty"`
	FinalAmount          float32                `protobuf:"fixed32,16,opt,name=final_amount,json=finalAmount,proto3" json:"final_amount,omitempty"`
	CartState            CARTSTATE              `protobuf:"varint,17,opt,name=cart_state,json=cartState,proto3,enum=Cart_v1.CARTSTATE" json:"cart_state,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Cart) Reset() {
	*x = Cart{}
	mi := &file_cart_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cart) ProtoMessage() {}

func (x *Cart) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cart.ProtoReflect.Descriptor instead.
func (*Cart) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{0}
}

func (x *Cart) GetStoreUuid() string {
	if x != nil {
		return x.StoreUuid
	}
	return ""
}

func (x *Cart) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *Cart) GetUserPhoneNo() string {
	if x != nil {
		return x.UserPhoneNo
	}
	return ""
}

func (x *Cart) GetOrderType() ORDERTYPE {
	if x != nil {
		return x.OrderType
	}
	return ORDERTYPE_ORDER_TYPE_UNSPECIFIED
}

func (x *Cart) GetTableNo() string {
	if x != nil {
		return x.TableNo
	}
	return ""
}

func (x *Cart) GetVehicleNo() string {
	if x != nil {
		return x.VehicleNo
	}
	return ""
}

func (x *Cart) GetVehicleDescription() string {
	if x != nil {
		return x.VehicleDescription
	}
	return ""
}

func (x *Cart) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *Cart) GetSpeacialInstructions() string {
	if x != nil {
		return x.SpeacialInstructions
	}
	return ""
}

func (x *Cart) GetItems() []*CartItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Cart) GetTotalSubtotal() float32 {
	if x != nil {
		return x.TotalSubtotal
	}
	return 0
}

func (x *Cart) GetTotalDiscount() float32 {
	if x != nil {
		return x.TotalDiscount
	}
	return 0
}

func (x *Cart) GetTotalPriceBeforeTax() float32 {
	if x != nil {
		return x.TotalPriceBeforeTax
	}
	return 0
}

func (x *Cart) GetTotalTax() float32 {
	if x != nil {
		return x.TotalTax
	}
	return 0
}

func (x *Cart) GetPackagingCost() float32 {
	if x != nil {
		return x.PackagingCost
	}
	return 0
}

func (x *Cart) GetFinalAmount() float32 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *Cart) GetCartState() CARTSTATE {
	if x != nil {
		return x.CartState
	}
	return CARTSTATE_CART_STATE_UNSPECIFIED_STATE
}

func (x *Cart) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Cart) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CartItem struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CartItemUuid   string                 `protobuf:"bytes,1,opt,name=cart_item_uuid,json=cartItemUuid,proto3" json:"cart_item_uuid,omitempty"`
	CartUuid       string                 `protobuf:"bytes,2,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	ProductName    string                 `protobuf:"bytes,3,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	ProductUuid    string                 `protobuf:"bytes,4,opt,name=product_uuid,json=productUuid,proto3" json:"product_uuid,omitempty"`
	TaxPercentage  float32                `protobuf:"fixed32,5,opt,name=tax_percentage,json=taxPercentage,proto3" json:"tax_percentage,omitempty"`
	UnitPrice      float32                `protobuf:"fixed32,6,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"` //Price of a single unit of the item (before any discount or tax).
	Quantity       int32                  `protobuf:"varint,7,opt,name=quantity,proto3" json:"quantity,omitempty"`                     //Number of units of the item in the cart.
	AddOnsTotal    float32                `protobuf:"fixed32,8,opt,name=add_ons_total,json=addOnsTotal,proto3" json:"add_ons_total,omitempty"`
	SubtotalAmount float32                `protobuf:"fixed32,9,opt,name=subtotal_amount,json=subtotalAmount,proto3" json:"subtotal_amount,omitempty"`    //unit_price * quantity (total before discounts and tax).
	DiscountAmount float32                `protobuf:"fixed32,10,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`   //Discount applied to this specific item.
	PriceBeforeTax float32                `protobuf:"fixed32,11,opt,name=price_before_tax,json=priceBeforeTax,proto3" json:"price_before_tax,omitempty"` //(subtotal_amount - discount_amount).
	TaxAmount      float32                `protobuf:"fixed32,12,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`                  //Tax applied to the item.
	FinalPrice     float32                `protobuf:"fixed32,13,opt,name=final_price,json=finalPrice,proto3" json:"final_price,omitempty"`               //price_before_tax + tax_amount (final amount for the item).
	PackagingCost  float32                `protobuf:"fixed32,14,opt,name=packaging_cost,json=packagingCost,proto3" json:"packaging_cost,omitempty"`      //Price for Packaging if required
	AddOns         []*AddOn               `protobuf:"bytes,15,rep,name=add_ons,json=addOns,proto3" json:"add_ons,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CartItem) Reset() {
	*x = CartItem{}
	mi := &file_cart_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartItem) ProtoMessage() {}

func (x *CartItem) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartItem.ProtoReflect.Descriptor instead.
func (*CartItem) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{1}
}

func (x *CartItem) GetCartItemUuid() string {
	if x != nil {
		return x.CartItemUuid
	}
	return ""
}

func (x *CartItem) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *CartItem) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *CartItem) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CartItem) GetTaxPercentage() float32 {
	if x != nil {
		return x.TaxPercentage
	}
	return 0
}

func (x *CartItem) GetUnitPrice() float32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *CartItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CartItem) GetAddOnsTotal() float32 {
	if x != nil {
		return x.AddOnsTotal
	}
	return 0
}

func (x *CartItem) GetSubtotalAmount() float32 {
	if x != nil {
		return x.SubtotalAmount
	}
	return 0
}

func (x *CartItem) GetDiscountAmount() float32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *CartItem) GetPriceBeforeTax() float32 {
	if x != nil {
		return x.PriceBeforeTax
	}
	return 0
}

func (x *CartItem) GetTaxAmount() float32 {
	if x != nil {
		return x.TaxAmount
	}
	return 0
}

func (x *CartItem) GetFinalPrice() float32 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *CartItem) GetPackagingCost() float32 {
	if x != nil {
		return x.PackagingCost
	}
	return 0
}

func (x *CartItem) GetAddOns() []*AddOn {
	if x != nil {
		return x.AddOns
	}
	return nil
}

type AddOn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartItemUuid  string                 `protobuf:"bytes,1,opt,name=cart_item_uuid,json=cartItemUuid,proto3" json:"cart_item_uuid,omitempty"`
	AddOnName     string                 `protobuf:"bytes,2,opt,name=add_on_name,json=addOnName,proto3" json:"add_on_name,omitempty"`
	AddOnUuid     string                 `protobuf:"bytes,3,opt,name=add_on_uuid,json=addOnUuid,proto3" json:"add_on_uuid,omitempty"`
	Quantity      int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UnitPrice     float32                `protobuf:"fixed32,5,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	IsFree        bool                   `protobuf:"varint,6,opt,name=is_free,json=isFree,proto3" json:"is_free,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddOn) Reset() {
	*x = AddOn{}
	mi := &file_cart_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOn) ProtoMessage() {}

func (x *AddOn) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOn.ProtoReflect.Descriptor instead.
func (*AddOn) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{2}
}

func (x *AddOn) GetCartItemUuid() string {
	if x != nil {
		return x.CartItemUuid
	}
	return ""
}

func (x *AddOn) GetAddOnName() string {
	if x != nil {
		return x.AddOnName
	}
	return ""
}

func (x *AddOn) GetAddOnUuid() string {
	if x != nil {
		return x.AddOnUuid
	}
	return ""
}

func (x *AddOn) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *AddOn) GetUnitPrice() float32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *AddOn) GetIsFree() bool {
	if x != nil {
		return x.IsFree
	}
	return false
}

type CreateCartRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	StoreUuid          string                 `protobuf:"bytes,1,opt,name=store_uuid,json=storeUuid,proto3" json:"store_uuid,omitempty"`
	UserPhoneNo        string                 `protobuf:"bytes,2,opt,name=user_phone_no,json=userPhoneNo,proto3" json:"user_phone_no,omitempty"`
	OrderType          ORDERTYPE              `protobuf:"varint,3,opt,name=order_type,json=orderType,proto3,enum=Cart_v1.ORDERTYPE" json:"order_type,omitempty"`
	TableNo            string                 `protobuf:"bytes,4,opt,name=table_no,json=tableNo,proto3" json:"table_no,omitempty"`
	VehicleNo          string                 `protobuf:"bytes,5,opt,name=vehicle_no,json=vehicleNo,proto3" json:"vehicle_no,omitempty"`
	VehicleDescription string                 `protobuf:"bytes,6,opt,name=vehicle_description,json=vehicleDescription,proto3" json:"vehicle_description,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateCartRequest) Reset() {
	*x = CreateCartRequest{}
	mi := &file_cart_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCartRequest) ProtoMessage() {}

func (x *CreateCartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCartRequest.ProtoReflect.Descriptor instead.
func (*CreateCartRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCartRequest) GetStoreUuid() string {
	if x != nil {
		return x.StoreUuid
	}
	return ""
}

func (x *CreateCartRequest) GetUserPhoneNo() string {
	if x != nil {
		return x.UserPhoneNo
	}
	return ""
}

func (x *CreateCartRequest) GetOrderType() ORDERTYPE {
	if x != nil {
		return x.OrderType
	}
	return ORDERTYPE_ORDER_TYPE_UNSPECIFIED
}

func (x *CreateCartRequest) GetTableNo() string {
	if x != nil {
		return x.TableNo
	}
	return ""
}

func (x *CreateCartRequest) GetVehicleNo() string {
	if x != nil {
		return x.VehicleNo
	}
	return ""
}

func (x *CreateCartRequest) GetVehicleDescription() string {
	if x != nil {
		return x.VehicleDescription
	}
	return ""
}

type CartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cart          *Cart                  `protobuf:"bytes,1,opt,name=cart,proto3" json:"cart,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartResponse) Reset() {
	*x = CartResponse{}
	mi := &file_cart_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartResponse) ProtoMessage() {}

func (x *CartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartResponse.ProtoReflect.Descriptor instead.
func (*CartResponse) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{4}
}

func (x *CartResponse) GetCart() *Cart {
	if x != nil {
		return x.Cart
	}
	return nil
}

type GetCartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreUuid     *string                `protobuf:"bytes,1,opt,name=store_uuid,json=storeUuid,proto3,oneof" json:"store_uuid,omitempty"`
	UserPhoneNo   *string                `protobuf:"bytes,2,opt,name=user_phone_no,json=userPhoneNo,proto3,oneof" json:"user_phone_no,omitempty"`
	CartUuid      *string                `protobuf:"bytes,3,opt,name=cart_uuid,json=cartUuid,proto3,oneof" json:"cart_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCartRequest) Reset() {
	*x = GetCartRequest{}
	mi := &file_cart_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCartRequest) ProtoMessage() {}

func (x *GetCartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCartRequest.ProtoReflect.Descriptor instead.
func (*GetCartRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{5}
}

func (x *GetCartRequest) GetStoreUuid() string {
	if x != nil && x.StoreUuid != nil {
		return *x.StoreUuid
	}
	return ""
}

func (x *GetCartRequest) GetUserPhoneNo() string {
	if x != nil && x.UserPhoneNo != nil {
		return *x.UserPhoneNo
	}
	return ""
}

func (x *GetCartRequest) GetCartUuid() string {
	if x != nil && x.CartUuid != nil {
		return *x.CartUuid
	}
	return ""
}

type UpdateCartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreUuid     string                 `protobuf:"bytes,1,opt,name=store_uuid,json=storeUuid,proto3" json:"store_uuid,omitempty"`
	UserPhoneNo   string                 `protobuf:"bytes,2,opt,name=user_phone_no,json=userPhoneNo,proto3" json:"user_phone_no,omitempty"`
	CartUuid      string                 `protobuf:"bytes,3,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	Cart          *Cart                  `protobuf:"bytes,4,opt,name=cart,proto3" json:"cart,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCartRequest) Reset() {
	*x = UpdateCartRequest{}
	mi := &file_cart_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCartRequest) ProtoMessage() {}

func (x *UpdateCartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCartRequest.ProtoReflect.Descriptor instead.
func (*UpdateCartRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCartRequest) GetStoreUuid() string {
	if x != nil {
		return x.StoreUuid
	}
	return ""
}

func (x *UpdateCartRequest) GetUserPhoneNo() string {
	if x != nil {
		return x.UserPhoneNo
	}
	return ""
}

func (x *UpdateCartRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *UpdateCartRequest) GetCart() *Cart {
	if x != nil {
		return x.Cart
	}
	return nil
}

type DeleteCartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreUuid     string                 `protobuf:"bytes,1,opt,name=store_uuid,json=storeUuid,proto3" json:"store_uuid,omitempty"`
	UserPhoneNo   string                 `protobuf:"bytes,2,opt,name=user_phone_no,json=userPhoneNo,proto3" json:"user_phone_no,omitempty"`
	CartUuid      string                 `protobuf:"bytes,3,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCartRequest) Reset() {
	*x = DeleteCartRequest{}
	mi := &file_cart_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCartRequest) ProtoMessage() {}

func (x *DeleteCartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCartRequest.ProtoReflect.Descriptor instead.
func (*DeleteCartRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCartRequest) GetStoreUuid() string {
	if x != nil {
		return x.StoreUuid
	}
	return ""
}

func (x *DeleteCartRequest) GetUserPhoneNo() string {
	if x != nil {
		return x.UserPhoneNo
	}
	return ""
}

func (x *DeleteCartRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

type AddCartItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	CartItem      *CartItem              `protobuf:"bytes,2,opt,name=cart_item,json=cartItem,proto3" json:"cart_item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCartItemRequest) Reset() {
	*x = AddCartItemRequest{}
	mi := &file_cart_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCartItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCartItemRequest) ProtoMessage() {}

func (x *AddCartItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCartItemRequest.ProtoReflect.Descriptor instead.
func (*AddCartItemRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{8}
}

func (x *AddCartItemRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *AddCartItemRequest) GetCartItem() *CartItem {
	if x != nil {
		return x.CartItem
	}
	return nil
}

type RemoveCartItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartItemUuid  string                 `protobuf:"bytes,1,opt,name=cart_item_uuid,json=cartItemUuid,proto3" json:"cart_item_uuid,omitempty"`
	CartUuid      string                 `protobuf:"bytes,2,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveCartItemRequest) Reset() {
	*x = RemoveCartItemRequest{}
	mi := &file_cart_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveCartItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCartItemRequest) ProtoMessage() {}

func (x *RemoveCartItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCartItemRequest.ProtoReflect.Descriptor instead.
func (*RemoveCartItemRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveCartItemRequest) GetCartItemUuid() string {
	if x != nil {
		return x.CartItemUuid
	}
	return ""
}

func (x *RemoveCartItemRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

type AddQuantityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	CartItemUuid  string                 `protobuf:"bytes,2,opt,name=cart_item_uuid,json=cartItemUuid,proto3" json:"cart_item_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddQuantityRequest) Reset() {
	*x = AddQuantityRequest{}
	mi := &file_cart_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddQuantityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQuantityRequest) ProtoMessage() {}

func (x *AddQuantityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQuantityRequest.ProtoReflect.Descriptor instead.
func (*AddQuantityRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{10}
}

func (x *AddQuantityRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *AddQuantityRequest) GetCartItemUuid() string {
	if x != nil {
		return x.CartItemUuid
	}
	return ""
}

type RemoveQuantityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	CartItemUuid  string                 `protobuf:"bytes,2,opt,name=cart_item_uuid,json=cartItemUuid,proto3" json:"cart_item_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveQuantityRequest) Reset() {
	*x = RemoveQuantityRequest{}
	mi := &file_cart_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveQuantityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveQuantityRequest) ProtoMessage() {}

func (x *RemoveQuantityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveQuantityRequest.ProtoReflect.Descriptor instead.
func (*RemoveQuantityRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveQuantityRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *RemoveQuantityRequest) GetCartItemUuid() string {
	if x != nil {
		return x.CartItemUuid
	}
	return ""
}

type CreateAddOnRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	CartItemUuid  string                 `protobuf:"bytes,2,opt,name=cart_item_uuid,json=cartItemUuid,proto3" json:"cart_item_uuid,omitempty"`
	AddOn         *AddOn                 `protobuf:"bytes,3,opt,name=add_on,json=addOn,proto3" json:"add_on,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAddOnRequest) Reset() {
	*x = CreateAddOnRequest{}
	mi := &file_cart_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddOnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddOnRequest) ProtoMessage() {}

func (x *CreateAddOnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddOnRequest.ProtoReflect.Descriptor instead.
func (*CreateAddOnRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{12}
}

func (x *CreateAddOnRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *CreateAddOnRequest) GetCartItemUuid() string {
	if x != nil {
		return x.CartItemUuid
	}
	return ""
}

func (x *CreateAddOnRequest) GetAddOn() *AddOn {
	if x != nil {
		return x.AddOn
	}
	return nil
}

type UpdateAddOnRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	CartItemUuid  string                 `protobuf:"bytes,2,opt,name=cart_item_uuid,json=cartItemUuid,proto3" json:"cart_item_uuid,omitempty"`
	AddOnUuid     string                 `protobuf:"bytes,3,opt,name=add_on_uuid,json=addOnUuid,proto3" json:"add_on_uuid,omitempty"`
	AddOn         *AddOn                 `protobuf:"bytes,4,opt,name=add_on,json=addOn,proto3" json:"add_on,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAddOnRequest) Reset() {
	*x = UpdateAddOnRequest{}
	mi := &file_cart_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAddOnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddOnRequest) ProtoMessage() {}

func (x *UpdateAddOnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddOnRequest.ProtoReflect.Descriptor instead.
func (*UpdateAddOnRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateAddOnRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *UpdateAddOnRequest) GetCartItemUuid() string {
	if x != nil {
		return x.CartItemUuid
	}
	return ""
}

func (x *UpdateAddOnRequest) GetAddOnUuid() string {
	if x != nil {
		return x.AddOnUuid
	}
	return ""
}

func (x *UpdateAddOnRequest) GetAddOn() *AddOn {
	if x != nil {
		return x.AddOn
	}
	return nil
}

type RemoveAddOnRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	CartItemUuid  string                 `protobuf:"bytes,2,opt,name=cart_item_uuid,json=cartItemUuid,proto3" json:"cart_item_uuid,omitempty"`
	AddOnUuid     string                 `protobuf:"bytes,3,opt,name=add_on_uuid,json=addOnUuid,proto3" json:"add_on_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAddOnRequest) Reset() {
	*x = RemoveAddOnRequest{}
	mi := &file_cart_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAddOnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAddOnRequest) ProtoMessage() {}

func (x *RemoveAddOnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAddOnRequest.ProtoReflect.Descriptor instead.
func (*RemoveAddOnRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveAddOnRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *RemoveAddOnRequest) GetCartItemUuid() string {
	if x != nil {
		return x.CartItemUuid
	}
	return ""
}

func (x *RemoveAddOnRequest) GetAddOnUuid() string {
	if x != nil {
		return x.AddOnUuid
	}
	return ""
}

type IncreaseAddOnQuantityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	CartItemUuid  string                 `protobuf:"bytes,2,opt,name=cart_item_uuid,json=cartItemUuid,proto3" json:"cart_item_uuid,omitempty"`
	AddOnUuid     string                 `protobuf:"bytes,3,opt,name=add_on_uuid,json=addOnUuid,proto3" json:"add_on_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncreaseAddOnQuantityRequest) Reset() {
	*x = IncreaseAddOnQuantityRequest{}
	mi := &file_cart_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncreaseAddOnQuantityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreaseAddOnQuantityRequest) ProtoMessage() {}

func (x *IncreaseAddOnQuantityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreaseAddOnQuantityRequest.ProtoReflect.Descriptor instead.
func (*IncreaseAddOnQuantityRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{15}
}

func (x *IncreaseAddOnQuantityRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *IncreaseAddOnQuantityRequest) GetCartItemUuid() string {
	if x != nil {
		return x.CartItemUuid
	}
	return ""
}

func (x *IncreaseAddOnQuantityRequest) GetAddOnUuid() string {
	if x != nil {
		return x.AddOnUuid
	}
	return ""
}

type RemoveAddOnQuantityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	CartItemUuid  string                 `protobuf:"bytes,2,opt,name=cart_item_uuid,json=cartItemUuid,proto3" json:"cart_item_uuid,omitempty"`
	AddOnUuid     string                 `protobuf:"bytes,3,opt,name=add_on_uuid,json=addOnUuid,proto3" json:"add_on_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAddOnQuantityRequest) Reset() {
	*x = RemoveAddOnQuantityRequest{}
	mi := &file_cart_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAddOnQuantityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAddOnQuantityRequest) ProtoMessage() {}

func (x *RemoveAddOnQuantityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAddOnQuantityRequest.ProtoReflect.Descriptor instead.
func (*RemoveAddOnQuantityRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveAddOnQuantityRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *RemoveAddOnQuantityRequest) GetCartItemUuid() string {
	if x != nil {
		return x.CartItemUuid
	}
	return ""
}

func (x *RemoveAddOnQuantityRequest) GetAddOnUuid() string {
	if x != nil {
		return x.AddOnUuid
	}
	return ""
}

type ValidCouponResquest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	CouponCode    string                 `protobuf:"bytes,2,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidCouponResquest) Reset() {
	*x = ValidCouponResquest{}
	mi := &file_cart_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidCouponResquest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidCouponResquest) ProtoMessage() {}

func (x *ValidCouponResquest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidCouponResquest.ProtoReflect.Descriptor instead.
func (*ValidCouponResquest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{17}
}

func (x *ValidCouponResquest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *ValidCouponResquest) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

type ValidCouponResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=Valid,proto3" json:"Valid,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidCouponResponse) Reset() {
	*x = ValidCouponResponse{}
	mi := &file_cart_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidCouponResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidCouponResponse) ProtoMessage() {}

func (x *ValidCouponResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidCouponResponse.ProtoReflect.Descriptor instead.
func (*ValidCouponResponse) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{18}
}

func (x *ValidCouponResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidCouponResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddCouponRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	CouponCode    string                 `protobuf:"bytes,2,opt,name=Coupon_code,json=CouponCode,proto3" json:"Coupon_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCouponRequest) Reset() {
	*x = AddCouponRequest{}
	mi := &file_cart_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCouponRequest) ProtoMessage() {}

func (x *AddCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCouponRequest.ProtoReflect.Descriptor instead.
func (*AddCouponRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{19}
}

func (x *AddCouponRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

func (x *AddCouponRequest) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

type RemoveCouponRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveCouponRequest) Reset() {
	*x = RemoveCouponRequest{}
	mi := &file_cart_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCouponRequest) ProtoMessage() {}

func (x *RemoveCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCouponRequest.ProtoReflect.Descriptor instead.
func (*RemoveCouponRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveCouponRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

type ValidateCartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartUuid      string                 `protobuf:"bytes,1,opt,name=cart_uuid,json=cartUuid,proto3" json:"cart_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateCartRequest) Reset() {
	*x = ValidateCartRequest{}
	mi := &file_cart_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateCartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCartRequest) ProtoMessage() {}

func (x *ValidateCartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCartRequest.ProtoReflect.Descriptor instead.
func (*ValidateCartRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{21}
}

func (x *ValidateCartRequest) GetCartUuid() string {
	if x != nil {
		return x.CartUuid
	}
	return ""
}

type Coupon struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CouponUuid        string                 `protobuf:"bytes,1,opt,name=coupon_uuid,json=couponUuid,proto3" json:"coupon_uuid,omitempty"`
	StoreUuid         string                 `protobuf:"bytes,2,opt,name=store_uuid,json=storeUuid,proto3" json:"store_uuid,omitempty"`
	CouponCode        string                 `protobuf:"bytes,3,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`
	DiscountType      DISCOUNTTYPE           `protobuf:"varint,4,opt,name=discount_type,json=discountType,proto3,enum=Cart_v1.DISCOUNTTYPE" json:"discount_type,omitempty"`
	ValidFrom         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo           *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	UsageLimitPerUser int32                  `protobuf:"varint,7,opt,name=usage_limit_per_user,json=usageLimitPerUser,proto3" json:"usage_limit_per_user,omitempty"`
	TotalUsageLimit   int32                  `protobuf:"varint,8,opt,name=total_usage_limit,json=totalUsageLimit,proto3" json:"total_usage_limit,omitempty"`
	Discount          float32                `protobuf:"fixed32,9,opt,name=discount,proto3" json:"discount,omitempty"`
	MinSpend          float32                `protobuf:"fixed32,10,opt,name=min_spend,json=minSpend,proto3" json:"min_spend,omitempty"`
	IsForNewUsers     bool                   `protobuf:"varint,11,opt,name=is_for_new_users,json=isForNewUsers,proto3" json:"is_for_new_users,omitempty"`
	Description       string                 `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	MaxCartValue      float32                `protobuf:"fixed32,13,opt,name=max_cart_value,json=maxCartValue,proto3" json:"max_cart_value,omitempty"`
	IsActive          bool                   `protobuf:"varint,14,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Coupon) Reset() {
	*x = Coupon{}
	mi := &file_cart_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coupon) ProtoMessage() {}

func (x *Coupon) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coupon.ProtoReflect.Descriptor instead.
func (*Coupon) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{22}
}

func (x *Coupon) GetCouponUuid() string {
	if x != nil {
		return x.CouponUuid
	}
	return ""
}

func (x *Coupon) GetStoreUuid() string {
	if x != nil {
		return x.StoreUuid
	}
	return ""
}

func (x *Coupon) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *Coupon) GetDiscountType() DISCOUNTTYPE {
	if x != nil {
		return x.DiscountType
	}
	return DISCOUNTTYPE_UNSPCIFIED_DISCOUNT
}

func (x *Coupon) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *Coupon) GetValidTo() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidTo
	}
	return nil
}

func (x *Coupon) GetUsageLimitPerUser() int32 {
	if x != nil {
		return x.UsageLimitPerUser
	}
	return 0
}

func (x *Coupon) GetTotalUsageLimit() int32 {
	if x != nil {
		return x.TotalUsageLimit
	}
	return 0
}

func (x *Coupon) GetDiscount() float32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *Coupon) GetMinSpend() float32 {
	if x != nil {
		return x.MinSpend
	}
	return 0
}

func (x *Coupon) GetIsForNewUsers() bool {
	if x != nil {
		return x.IsForNewUsers
	}
	return false
}

func (x *Coupon) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Coupon) GetMaxCartValue() float32 {
	if x != nil {
		return x.MaxCartValue
	}
	return 0
}

func (x *Coupon) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type CouponUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UsageUuid     string                 `protobuf:"bytes,1,opt,name=usage_uuid,json=usageUuid,proto3" json:"usage_uuid,omitempty"`
	CouponUuid    string                 `protobuf:"bytes,2,opt,name=Coupon_uuid,json=CouponUuid,proto3" json:"Coupon_uuid,omitempty"`
	UserPhoneNo   string                 `protobuf:"bytes,3,opt,name=user_phone_no,json=userPhoneNo,proto3" json:"user_phone_no,omitempty"`
	UsedAt        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=used_at,json=usedAt,proto3" json:"used_at,omitempty"`
	OrderUuid     string                 `protobuf:"bytes,5,opt,name=order_uuid,json=orderUuid,proto3" json:"order_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CouponUsage) Reset() {
	*x = CouponUsage{}
	mi := &file_cart_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CouponUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponUsage) ProtoMessage() {}

func (x *CouponUsage) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponUsage.ProtoReflect.Descriptor instead.
func (*CouponUsage) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{23}
}

func (x *CouponUsage) GetUsageUuid() string {
	if x != nil {
		return x.UsageUuid
	}
	return ""
}

func (x *CouponUsage) GetCouponUuid() string {
	if x != nil {
		return x.CouponUuid
	}
	return ""
}

func (x *CouponUsage) GetUserPhoneNo() string {
	if x != nil {
		return x.UserPhoneNo
	}
	return ""
}

func (x *CouponUsage) GetUsedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UsedAt
	}
	return nil
}

func (x *CouponUsage) GetOrderUuid() string {
	if x != nil {
		return x.OrderUuid
	}
	return ""
}

type CreateCouponRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreUuid     string                 `protobuf:"bytes,1,opt,name=store_uuid,json=storeUuid,proto3" json:"store_uuid,omitempty"`
	Coupon        *Coupon                `protobuf:"bytes,2,opt,name=coupon,proto3" json:"coupon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCouponRequest) Reset() {
	*x = CreateCouponRequest{}
	mi := &file_cart_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCouponRequest) ProtoMessage() {}

func (x *CreateCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCouponRequest.ProtoReflect.Descriptor instead.
func (*CreateCouponRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{24}
}

func (x *CreateCouponRequest) GetStoreUuid() string {
	if x != nil {
		return x.StoreUuid
	}
	return ""
}

func (x *CreateCouponRequest) GetCoupon() *Coupon {
	if x != nil {
		return x.Coupon
	}
	return nil
}

type GetCouponRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreUuid     string                 `protobuf:"bytes,1,opt,name=store_uuid,json=storeUuid,proto3" json:"store_uuid,omitempty"`
	CouponUuid    string                 `protobuf:"bytes,2,opt,name=coupon_uuid,json=couponUuid,proto3" json:"coupon_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCouponRequest) Reset() {
	*x = GetCouponRequest{}
	mi := &file_cart_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCouponRequest) ProtoMessage() {}

func (x *GetCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCouponRequest.ProtoReflect.Descriptor instead.
func (*GetCouponRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{25}
}

func (x *GetCouponRequest) GetStoreUuid() string {
	if x != nil {
		return x.StoreUuid
	}
	return ""
}

func (x *GetCouponRequest) GetCouponUuid() string {
	if x != nil {
		return x.CouponUuid
	}
	return ""
}

type UpdateCouponRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreUuid     string                 `protobuf:"bytes,1,opt,name=store_uuid,json=storeUuid,proto3" json:"store_uuid,omitempty"`
	CouponUuid    string                 `protobuf:"bytes,2,opt,name=coupon_uuid,json=couponUuid,proto3" json:"coupon_uuid,omitempty"`
	Coupon        *Coupon                `protobuf:"bytes,3,opt,name=coupon,proto3" json:"coupon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCouponRequest) Reset() {
	*x = UpdateCouponRequest{}
	mi := &file_cart_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCouponRequest) ProtoMessage() {}

func (x *UpdateCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCouponRequest.ProtoReflect.Descriptor instead.
func (*UpdateCouponRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateCouponRequest) GetStoreUuid() string {
	if x != nil {
		return x.StoreUuid
	}
	return ""
}

func (x *UpdateCouponRequest) GetCouponUuid() string {
	if x != nil {
		return x.CouponUuid
	}
	return ""
}

func (x *UpdateCouponRequest) GetCoupon() *Coupon {
	if x != nil {
		return x.Coupon
	}
	return nil
}

type DeleteCouponRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreUuid     string                 `protobuf:"bytes,1,opt,name=store_uuid,json=storeUuid,proto3" json:"store_uuid,omitempty"`
	CouponUuid    string                 `protobuf:"bytes,2,opt,name=coupon_uuid,json=couponUuid,proto3" json:"coupon_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCouponRequest) Reset() {
	*x = DeleteCouponRequest{}
	mi := &file_cart_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCouponRequest) ProtoMessage() {}

func (x *DeleteCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCouponRequest.ProtoReflect.Descriptor instead.
func (*DeleteCouponRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteCouponRequest) GetStoreUuid() string {
	if x != nil {
		return x.StoreUuid
	}
	return ""
}

func (x *DeleteCouponRequest) GetCouponUuid() string {
	if x != nil {
		return x.CouponUuid
	}
	return ""
}

type ListCouponRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreUuid     string                 `protobuf:"bytes,1,opt,name=store_uuid,json=storeUuid,proto3" json:"store_uuid,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCouponRequest) Reset() {
	*x = ListCouponRequest{}
	mi := &file_cart_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCouponRequest) ProtoMessage() {}

func (x *ListCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCouponRequest.ProtoReflect.Descriptor instead.
func (*ListCouponRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{28}
}

func (x *ListCouponRequest) GetStoreUuid() string {
	if x != nil {
		return x.StoreUuid
	}
	return ""
}

func (x *ListCouponRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCouponRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListCouponResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Coupons       []*Coupon              `protobuf:"bytes,1,rep,name=coupons,proto3" json:"coupons,omitempty"`
	NextPage      int32                  `protobuf:"varint,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PrevPage      int32                  `protobuf:"varint,3,opt,name=prev_page,json=prevPage,proto3" json:"prev_page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCouponResponse) Reset() {
	*x = ListCouponResponse{}
	mi := &file_cart_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCouponResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCouponResponse) ProtoMessage() {}

func (x *ListCouponResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCouponResponse.ProtoReflect.Descriptor instead.
func (*ListCouponResponse) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{29}
}

func (x *ListCouponResponse) GetCoupons() []*Coupon {
	if x != nil {
		return x.Coupons
	}
	return nil
}

func (x *ListCouponResponse) GetNextPage() int32 {
	if x != nil {
		return x.NextPage
	}
	return 0
}

func (x *ListCouponResponse) GetPrevPage() int32 {
	if x != nil {
		return x.PrevPage
	}
	return 0
}

type GetCouponUsageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreUuid     string                 `protobuf:"bytes,1,opt,name=store_uuid,json=storeUuid,proto3" json:"store_uuid,omitempty"`
	CouponUuid    string                 `protobuf:"bytes,2,opt,name=coupon_uuid,json=couponUuid,proto3" json:"coupon_uuid,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCouponUsageRequest) Reset() {
	*x = GetCouponUsageRequest{}
	mi := &file_cart_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCouponUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCouponUsageRequest) ProtoMessage() {}

func (x *GetCouponUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCouponUsageRequest.ProtoReflect.Descriptor instead.
func (*GetCouponUsageRequest) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{30}
}

func (x *GetCouponUsageRequest) GetStoreUuid() string {
	if x != nil {
		return x.StoreUuid
	}
	return ""
}

func (x *GetCouponUsageRequest) GetCouponUuid() string {
	if x != nil {
		return x.CouponUuid
	}
	return ""
}

func (x *GetCouponUsageRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCouponUsageRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetCouponUsageResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CouponUsageList []*CouponUsage         `protobuf:"bytes,1,rep,name=coupon_usage_list,json=couponUsageList,proto3" json:"coupon_usage_list,omitempty"`
	NextPage        int32                  `protobuf:"varint,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PrevPage        int32                  `protobuf:"varint,3,opt,name=prev_page,json=prevPage,proto3" json:"prev_page,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetCouponUsageResponse) Reset() {
	*x = GetCouponUsageResponse{}
	mi := &file_cart_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCouponUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCouponUsageResponse) ProtoMessage() {}

func (x *GetCouponUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cart_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCouponUsageResponse.ProtoReflect.Descriptor instead.
func (*GetCouponUsageResponse) Descriptor() ([]byte, []int) {
	return file_cart_proto_rawDescGZIP(), []int{31}
}

func (x *GetCouponUsageResponse) GetCouponUsageList() []*CouponUsage {
	if x != nil {
		return x.CouponUsageList
	}
	return nil
}

func (x *GetCouponUsageResponse) GetNextPage() int32 {
	if x != nil {
		return x.NextPage
	}
	return 0
}

func (x *GetCouponUsageResponse) GetPrevPage() int32 {
	if x != nil {
		return x.PrevPage
	}
	return 0
}

var File_cart_proto protoreflect.FileDescriptor

var file_cart_proto_rawDesc = string([]byte{
	0x0a, 0x0a, 0x63, 0x61, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x43, 0x61,
	0x72, 0x74, 0x5f, 0x76, 0x31, 0x1a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x06, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12,
	0x31, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x2f, 0x0a, 0x13,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x33,
	0x0a, 0x15, 0x73, 0x70, 0x65, 0x61, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73,
	0x70, 0x65, 0x61, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x5f, 0x74, 0x61, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x78, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x61, 0x72,
	0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x41, 0x52, 0x54, 0x53, 0x54, 0x41, 0x54, 0x45, 0x52, 0x09,
	0x63, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xa5, 0x04, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x74,
	0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x5f, 0x6f,
	0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x61, 0x64, 0x64, 0x4f, 0x6e, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x61,
	0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x78, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x61, 0x78,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x52,
	0x06, 0x61, 0x64, 0x64, 0x4f, 0x6e, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x4f,
	0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x4f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x6f,
	0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x4f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x31, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f,
	0x76, 0x31, 0x2e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4e,
	0x6f, 0x12, 0x2f, 0x0a, 0x13, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52,
	0x04, 0x63, 0x61, 0x72, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x61, 0x72,
	0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x04,
	0x63, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x61, 0x72,
	0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x04, 0x63, 0x61, 0x72, 0x74, 0x22,
	0x73, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x61, 0x72,
	0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63,
	0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x5a, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72,
	0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x22, 0x5a, 0x0a, 0x15,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x22, 0x7e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f,
	0x6e, 0x52, 0x05, 0x61, 0x64, 0x64, 0x4f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x4f, 0x6e, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x4f, 0x6e, 0x52, 0x05, 0x61, 0x64, 0x64, 0x4f, 0x6e, 0x22, 0x77, 0x0a, 0x12, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x4f, 0x6e, 0x55, 0x75,
	0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x1c, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41,
	0x64, 0x64, 0x4f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64,
	0x4f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x64, 0x64, 0x4f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x6f,
	0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x4f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x13, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x13,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x50, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x32, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x13, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0xbb, 0x04,
	0x0a, 0x06, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x49, 0x53, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x35, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x12, 0x2f, 0x0a, 0x14, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x75, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x27, 0x0a,
	0x10, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x4e, 0x65,
	0x77, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0c, 0x6d, 0x61, 0x78, 0x43, 0x61, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x0b,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x61, 0x67, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12,
	0x33, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x61, 0x72, 0x74,
	0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x22, 0x7e, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a,
	0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x06,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x22, 0x5c, 0x0a,
	0x11, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x79, 0x0a, 0x12, 0x6c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65,
	0x76, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72,
	0x65, 0x76, 0x50, 0x61, 0x67, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x50, 0x61, 0x67,
	0x65, 0x2a, 0x74, 0x0a, 0x09, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x54, 0x59, 0x50, 0x45, 0x12, 0x1a,
	0x0a, 0x16, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x4e, 0x45, 0x5f, 0x49, 0x4e,
	0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x41, 0x57, 0x41, 0x59, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45,
	0x5f, 0x54, 0x48, 0x52, 0x55, 0x10, 0x03, 0x2a, 0x75, 0x0a, 0x09, 0x43, 0x41, 0x52, 0x54, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x41, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x52, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x43, 0x41, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x4b,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x41, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x41, 0x42, 0x41, 0x4e, 0x44, 0x4f, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x54,
	0x0a, 0x0c, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x54, 0x59, 0x50, 0x45, 0x12, 0x17,
	0x0a, 0x13, 0x55, 0x4e, 0x53, 0x50, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x44, 0x49, 0x53,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x45, 0x52, 0x43, 0x45,
	0x4e, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x46, 0x49, 0x58, 0x45, 0x44, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x10, 0x02, 0x32, 0xc5, 0x10, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x74, 0x12, 0x1a, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a,
	0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x12, 0x4b, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x72, 0x74, 0x12, 0x17, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x12, 0x54, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d,
	0x3a, 0x01, 0x2a, 0x1a, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x12, 0x52, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x2e, 0x43, 0x61,
	0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x2a, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72,
	0x74, 0x12, 0x6b, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1b, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22,
	0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x7f,
	0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1e, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x2a,
	0x2e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x7b,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x12,
	0x86, 0x01, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x1b, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43,
	0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x1a, 0x3b, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x7d, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x8f, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x2e, 0x43, 0x61,
	0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x61,
	0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x1a, 0x3e, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d,
	0x2f, 0x63, 0x61, 0x72, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x82, 0x01, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x12, 0x1b, 0x2e, 0x43, 0x61, 0x72,
	0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x3a, 0x01, 0x2a, 0x22, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f,
	0x63, 0x61, 0x72, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x12,
	0x90, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x12,
	0x1b, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x64, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43,
	0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x47, 0x3a, 0x01, 0x2a, 0x22, 0x42,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x7b, 0x63,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x64, 0x64, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x7d, 0x12, 0x8d, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64,
	0x4f, 0x6e, 0x12, 0x1b, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x2a, 0x42,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x7b, 0x63,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x64, 0x64, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x7d, 0x12, 0xae, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41,
	0x64, 0x64, 0x4f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x43,
	0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41,
	0x64, 0x64, 0x4f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x51, 0x1a, 0x4f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61,
	0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x69, 0x74, 0x65,
	0x6d, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0xad, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64,
	0x64, 0x4f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x2e, 0x43, 0x61,
	0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x4f,
	0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x54, 0x1a,
	0x52, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x7b,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f,
	0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x88, 0x01, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12, 0x32, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x2f, 0x7b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x7d, 0x12, 0x70,
	0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x43, 0x61,
	0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x1a, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x2f,
	0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x2f, 0x7b, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x7d,
	0x12, 0x6e, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x12, 0x1c, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x2a, 0x21, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x12, 0x6a, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74,
	0x12, 0x1c, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x7d, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x32, 0xae, 0x04, 0x0a,
	0x0d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54,
	0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1c,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x43,
	0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x22, 0x15, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x12, 0x19, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x43,
	0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x22, 0x12, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x12, 0x54, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x12, 0x1c, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x1a, 0x0a, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x12, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x2a, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x12, 0x5e, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12,
	0x1a, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x43, 0x61,
	0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11,
	0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x6a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x75, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0c, 0x5a,
	0x0a, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x3b, 0x63, 0x61, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_cart_proto_rawDescOnce sync.Once
	file_cart_proto_rawDescData []byte
)

func file_cart_proto_rawDescGZIP() []byte {
	file_cart_proto_rawDescOnce.Do(func() {
		file_cart_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cart_proto_rawDesc), len(file_cart_proto_rawDesc)))
	})
	return file_cart_proto_rawDescData
}

var file_cart_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_cart_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_cart_proto_goTypes = []any{
	(ORDERTYPE)(0),                       // 0: Cart_v1.ORDERTYPE
	(CARTSTATE)(0),                       // 1: Cart_v1.CARTSTATE
	(DISCOUNTTYPE)(0),                    // 2: Cart_v1.DISCOUNTTYPE
	(*Cart)(nil),                         // 3: Cart_v1.Cart
	(*CartItem)(nil),                     // 4: Cart_v1.CartItem
	(*AddOn)(nil),                        // 5: Cart_v1.AddOn
	(*CreateCartRequest)(nil),            // 6: Cart_v1.CreateCartRequest
	(*CartResponse)(nil),                 // 7: Cart_v1.CartResponse
	(*GetCartRequest)(nil),               // 8: Cart_v1.GetCartRequest
	(*UpdateCartRequest)(nil),            // 9: Cart_v1.UpdateCartRequest
	(*DeleteCartRequest)(nil),            // 10: Cart_v1.DeleteCartRequest
	(*AddCartItemRequest)(nil),           // 11: Cart_v1.AddCartItemRequest
	(*RemoveCartItemRequest)(nil),        // 12: Cart_v1.RemoveCartItemRequest
	(*AddQuantityRequest)(nil),           // 13: Cart_v1.AddQuantityRequest
	(*RemoveQuantityRequest)(nil),        // 14: Cart_v1.RemoveQuantityRequest
	(*CreateAddOnRequest)(nil),           // 15: Cart_v1.CreateAddOnRequest
	(*UpdateAddOnRequest)(nil),           // 16: Cart_v1.UpdateAddOnRequest
	(*RemoveAddOnRequest)(nil),           // 17: Cart_v1.RemoveAddOnRequest
	(*IncreaseAddOnQuantityRequest)(nil), // 18: Cart_v1.IncreaseAddOnQuantityRequest
	(*RemoveAddOnQuantityRequest)(nil),   // 19: Cart_v1.RemoveAddOnQuantityRequest
	(*ValidCouponResquest)(nil),          // 20: Cart_v1.ValidCouponResquest
	(*ValidCouponResponse)(nil),          // 21: Cart_v1.ValidCouponResponse
	(*AddCouponRequest)(nil),             // 22: Cart_v1.AddCouponRequest
	(*RemoveCouponRequest)(nil),          // 23: Cart_v1.RemoveCouponRequest
	(*ValidateCartRequest)(nil),          // 24: Cart_v1.ValidateCartRequest
	(*Coupon)(nil),                       // 25: Cart_v1.Coupon
	(*CouponUsage)(nil),                  // 26: Cart_v1.CouponUsage
	(*CreateCouponRequest)(nil),          // 27: Cart_v1.CreateCouponRequest
	(*GetCouponRequest)(nil),             // 28: Cart_v1.GetCouponRequest
	(*UpdateCouponRequest)(nil),          // 29: Cart_v1.UpdateCouponRequest
	(*DeleteCouponRequest)(nil),          // 30: Cart_v1.DeleteCouponRequest
	(*ListCouponRequest)(nil),            // 31: Cart_v1.listCouponRequest
	(*ListCouponResponse)(nil),           // 32: Cart_v1.listCouponResponse
	(*GetCouponUsageRequest)(nil),        // 33: Cart_v1.GetCouponUsageRequest
	(*GetCouponUsageResponse)(nil),       // 34: Cart_v1.GetCouponUsageResponse
	(*timestamppb.Timestamp)(nil),        // 35: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                // 36: google.protobuf.Empty
}
var file_cart_proto_depIdxs = []int32{
	0,  // 0: Cart_v1.Cart.order_type:type_name -> Cart_v1.ORDERTYPE
	4,  // 1: Cart_v1.Cart.items:type_name -> Cart_v1.CartItem
	1,  // 2: Cart_v1.Cart.cart_state:type_name -> Cart_v1.CARTSTATE
	35, // 3: Cart_v1.Cart.created_at:type_name -> google.protobuf.Timestamp
	35, // 4: Cart_v1.Cart.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 5: Cart_v1.CartItem.add_ons:type_name -> Cart_v1.AddOn
	0,  // 6: Cart_v1.CreateCartRequest.order_type:type_name -> Cart_v1.ORDERTYPE
	3,  // 7: Cart_v1.CartResponse.cart:type_name -> Cart_v1.Cart
	3,  // 8: Cart_v1.UpdateCartRequest.cart:type_name -> Cart_v1.Cart
	4,  // 9: Cart_v1.AddCartItemRequest.cart_item:type_name -> Cart_v1.CartItem
	5,  // 10: Cart_v1.CreateAddOnRequest.add_on:type_name -> Cart_v1.AddOn
	5,  // 11: Cart_v1.UpdateAddOnRequest.add_on:type_name -> Cart_v1.AddOn
	2,  // 12: Cart_v1.Coupon.discount_type:type_name -> Cart_v1.DISCOUNTTYPE
	35, // 13: Cart_v1.Coupon.valid_from:type_name -> google.protobuf.Timestamp
	35, // 14: Cart_v1.Coupon.valid_to:type_name -> google.protobuf.Timestamp
	35, // 15: Cart_v1.CouponUsage.used_at:type_name -> google.protobuf.Timestamp
	25, // 16: Cart_v1.CreateCouponRequest.coupon:type_name -> Cart_v1.Coupon
	25, // 17: Cart_v1.UpdateCouponRequest.coupon:type_name -> Cart_v1.Coupon
	25, // 18: Cart_v1.listCouponResponse.coupons:type_name -> Cart_v1.Coupon
	26, // 19: Cart_v1.GetCouponUsageResponse.coupon_usage_list:type_name -> Cart_v1.CouponUsage
	6,  // 20: Cart_v1.CartService.CreateCart:input_type -> Cart_v1.CreateCartRequest
	8,  // 21: Cart_v1.CartService.GetCart:input_type -> Cart_v1.GetCartRequest
	9,  // 22: Cart_v1.CartService.UpdateCart:input_type -> Cart_v1.UpdateCartRequest
	10, // 23: Cart_v1.CartService.DeleteCart:input_type -> Cart_v1.DeleteCartRequest
	11, // 24: Cart_v1.CartService.AddCartItem:input_type -> Cart_v1.AddCartItemRequest
	12, // 25: Cart_v1.CartService.RemoveCartItem:input_type -> Cart_v1.RemoveCartItemRequest
	13, // 26: Cart_v1.CartService.AddQuantity:input_type -> Cart_v1.AddQuantityRequest
	14, // 27: Cart_v1.CartService.RemoveQuantity:input_type -> Cart_v1.RemoveQuantityRequest
	15, // 28: Cart_v1.CartService.CreateAddOn:input_type -> Cart_v1.CreateAddOnRequest
	16, // 29: Cart_v1.CartService.UpdateAddOn:input_type -> Cart_v1.UpdateAddOnRequest
	17, // 30: Cart_v1.CartService.RemoveAddOn:input_type -> Cart_v1.RemoveAddOnRequest
	18, // 31: Cart_v1.CartService.IncreaseAddOnQuantity:input_type -> Cart_v1.IncreaseAddOnQuantityRequest
	19, // 32: Cart_v1.CartService.RemoveAddOnQuantity:input_type -> Cart_v1.RemoveAddOnQuantityRequest
	20, // 33: Cart_v1.CartService.ValidateCoupon:input_type -> Cart_v1.ValidCouponResquest
	22, // 34: Cart_v1.CartService.AddCoupon:input_type -> Cart_v1.AddCouponRequest
	23, // 35: Cart_v1.CartService.RemoveCoupon:input_type -> Cart_v1.RemoveCouponRequest
	24, // 36: Cart_v1.CartService.ValidateCart:input_type -> Cart_v1.ValidateCartRequest
	27, // 37: Cart_v1.CouponService.CreateCoupon:input_type -> Cart_v1.CreateCouponRequest
	28, // 38: Cart_v1.CouponService.GetCoupon:input_type -> Cart_v1.GetCouponRequest
	29, // 39: Cart_v1.CouponService.UpdateCoupon:input_type -> Cart_v1.UpdateCouponRequest
	30, // 40: Cart_v1.CouponService.DeleteCoupon:input_type -> Cart_v1.DeleteCouponRequest
	31, // 41: Cart_v1.CouponService.listCoupon:input_type -> Cart_v1.listCouponRequest
	33, // 42: Cart_v1.CouponService.GetCouponUsage:input_type -> Cart_v1.GetCouponUsageRequest
	7,  // 43: Cart_v1.CartService.CreateCart:output_type -> Cart_v1.CartResponse
	7,  // 44: Cart_v1.CartService.GetCart:output_type -> Cart_v1.CartResponse
	7,  // 45: Cart_v1.CartService.UpdateCart:output_type -> Cart_v1.CartResponse
	36, // 46: Cart_v1.CartService.DeleteCart:output_type -> google.protobuf.Empty
	7,  // 47: Cart_v1.CartService.AddCartItem:output_type -> Cart_v1.CartResponse
	7,  // 48: Cart_v1.CartService.RemoveCartItem:output_type -> Cart_v1.CartResponse
	7,  // 49: Cart_v1.CartService.AddQuantity:output_type -> Cart_v1.CartResponse
	7,  // 50: Cart_v1.CartService.RemoveQuantity:output_type -> Cart_v1.CartResponse
	7,  // 51: Cart_v1.CartService.CreateAddOn:output_type -> Cart_v1.CartResponse
	7,  // 52: Cart_v1.CartService.UpdateAddOn:output_type -> Cart_v1.CartResponse
	7,  // 53: Cart_v1.CartService.RemoveAddOn:output_type -> Cart_v1.CartResponse
	7,  // 54: Cart_v1.CartService.IncreaseAddOnQuantity:output_type -> Cart_v1.CartResponse
	7,  // 55: Cart_v1.CartService.RemoveAddOnQuantity:output_type -> Cart_v1.CartResponse
	21, // 56: Cart_v1.CartService.ValidateCoupon:output_type -> Cart_v1.ValidCouponResponse
	7,  // 57: Cart_v1.CartService.AddCoupon:output_type -> Cart_v1.CartResponse
	7,  // 58: Cart_v1.CartService.RemoveCoupon:output_type -> Cart_v1.CartResponse
	7,  // 59: Cart_v1.CartService.ValidateCart:output_type -> Cart_v1.CartResponse
	25, // 60: Cart_v1.CouponService.CreateCoupon:output_type -> Cart_v1.Coupon
	25, // 61: Cart_v1.CouponService.GetCoupon:output_type -> Cart_v1.Coupon
	25, // 62: Cart_v1.CouponService.UpdateCoupon:output_type -> Cart_v1.Coupon
	36, // 63: Cart_v1.CouponService.DeleteCoupon:output_type -> google.protobuf.Empty
	32, // 64: Cart_v1.CouponService.listCoupon:output_type -> Cart_v1.listCouponResponse
	34, // 65: Cart_v1.CouponService.GetCouponUsage:output_type -> Cart_v1.GetCouponUsageResponse
	43, // [43:66] is the sub-list for method output_type
	20, // [20:43] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_cart_proto_init() }
func file_cart_proto_init() {
	if File_cart_proto != nil {
		return
	}
	file_cart_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cart_proto_rawDesc), len(file_cart_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_cart_proto_goTypes,
		DependencyIndexes: file_cart_proto_depIdxs,
		EnumInfos:         file_cart_proto_enumTypes,
		MessageInfos:      file_cart_proto_msgTypes,
	}.Build()
	File_cart_proto = out.File
	file_cart_proto_goTypes = nil
	file_cart_proto_depIdxs = nil
}
